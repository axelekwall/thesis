
@inproceedings{feldt_supporting_2013,
	address = {Santander, Spain},
	title = {Supporting {Software} {Decision} {Meetings}: {Heatmaps} for {Visualising} {Test} and {Code} {Measurements}},
	isbn = {978-0-7695-5091-6},
	shorttitle = {Supporting {Software} {Decision} {Meetings}},
	url = {http://ieeexplore.ieee.org/document/6619490/},
	doi = {10.1109/SEAA.2013.61},
	abstract = {To achieve software quality it is critical to quickly understand the current test status, its changes over time as well as its relation to source code changes. However, even if this information is available in test logs and code repositories it is seldomly put to good use in supporting decision processes in software development. The amount of information is often large, is time consuming to extract and hard to monitor. This case study shows how visualisation and correlation between software measurements can support improvement discussions. In particular, simple heatmaps were found to be effective to visualize and monitor changes and identify recurring patterns in the development of a space-bourn, embedded control system. Statistical analysis quantiﬁed the correlation between different sources of development data and heatmaps then effectively focused the attention of stakeholders to importants parts of the system. Here the visual analysis was focused on post-project, historical data but we discuss how early identiﬁcation based on dynamic data analysis could support more effective analysis, planning and execution of quality assurance. Based on our ﬁndings we state requirements on such an online, visual analysis system and present a prototype implementation that can help software measurements better support value-based decisions in software development.},
	language = {en},
	urldate = {2020-01-16},
	booktitle = {2013 39th {Euromicro} {Conference} on {Software} {Engineering} and {Advanced} {Applications}},
	publisher = {IEEE},
	author = {Feldt, Robert and Staron, Miroslaw and Hult, Erika and Liljegren, Thomas},
	month = sep,
	year = {2013},
	pages = {62--69},
	file = {Feldt et al. - 2013 - Supporting Software Decision Meetings Heatmaps fo.pdf:/Users/axelekwall/Zotero/storage/688RJFSC/Feldt et al. - 2013 - Supporting Software Decision Meetings Heatmaps fo.pdf:application/pdf}
}

@book{huang_handbook_2014,
	address = {New York, NY},
	title = {Handbook of human centric visualization},
	isbn = {978-1-4614-7484-5},
	language = {en},
	publisher = {Springer},
	editor = {Huang, Weidong and Eades, Peter},
	year = {2014},
	note = {OCLC: ocn832271748},
	keywords = {Communicatie, Computergraphics, Datamining, Handbooks, manuals, etc, Human-computer interaction, Information visualization, Mens-computer-interactie, Psychologische aspecten, Visualisatie},
	file = {Huang and Eades - 2014 - Handbook of human centric visualization.pdf:/Users/axelekwall/Zotero/storage/IS2ADSR3/Huang and Eades - 2014 - Handbook of human centric visualization.pdf:application/pdf}
}

@incollection{huang_user_2014,
	address = {New York, NY},
	title = {User {Studies} in {Visualization}: {A} {Reflection} on {Methods}},
	isbn = {978-1-4614-7484-5 978-1-4614-7485-2},
	shorttitle = {User {Studies} in {Visualization}},
	url = {http://link.springer.com/10.1007/978-1-4614-7485-2_16},
	abstract = {In this chapter I will reﬂect on many years of running user studies in visualization, examining my experience with how effectively different methodological approaches worked for different goals. I ﬁrst introduce my own categorization of user studies based on their major goals (understanding versus evaluation, each with speciﬁc subcategories) and common methodological approaches (quantitative experiment, qualitative observational study, inspection, and usability study), providing examples of each combination. I then use examples from my own experience to reﬂect upon the strengths and weaknesses of each methodological approach.},
	language = {en},
	urldate = {2020-01-16},
	booktitle = {Handbook of {Human} {Centric} {Visualization}},
	publisher = {Springer New York},
	author = {Tory, Melanie},
	editor = {Huang, Weidong},
	year = {2014},
	doi = {10.1007/978-1-4614-7485-2_16},
	pages = {411--426},
	file = {Tory - 2014 - User Studies in Visualization A Reflection on Met.pdf:/Users/axelekwall/Zotero/storage/W2KXH8LI/Tory - 2014 - User Studies in Visualization A Reflection on Met.pdf:application/pdf}
}

@inproceedings{ogawa_software_2010,
	address = {Salt Lake City, Utah, USA},
	title = {Software evolution storylines},
	isbn = {978-1-4503-0028-5},
	url = {http://portal.acm.org/citation.cfm?doid=1879211.1879219},
	doi = {10.1145/1879211.1879219},
	abstract = {This paper presents a technique for visualizing the interactions between developers in software project evolution. The goal is to produce a visualization that shows more detail than animated software histories, like code swarm [15], but keeps the same focus on aesthetics and presentation. Our software evolution storylines technique draws inspiration from XKCD’s “Movie Narrative Charts” and the aesthetic design of metro maps. We provide the algorithm, design choices, and examine the results of using the storylines technique. Our conclusion is that the it is able to show more details when compared to animated software project history videos. However, it does not scale to the largest projects, such as Eclipse and Mozilla.},
	language = {en},
	urldate = {2020-01-16},
	booktitle = {Proceedings of the 5th international symposium on {Software} visualization - {SOFTVIS} '10},
	publisher = {ACM Press},
	author = {Ogawa, Michael and Ma, Kwan-Liu},
	year = {2010},
	pages = {35},
	file = {Ogawa and Ma - 2010 - Software evolution storylines.pdf:/Users/axelekwall/Zotero/storage/6LPMFW2J/Ogawa and Ma - 2010 - Software evolution storylines.pdf:application/pdf}
}

@article{ogawa_code_swarm_2009,
	title = {code\_swarm: {A} {Design} {Study} in {Organic} {Software} {Visualization}},
	volume = {15},
	issn = {1077-2626},
	shorttitle = {code\_swarm},
	url = {http://ieeexplore.ieee.org/document/5290717/},
	doi = {10.1109/TVCG.2009.123},
	abstract = {In May of 2008, we published online a series of software visualization videos using a method called code swarm. Shortly thereafter, we made the code open source and its popularity took off. This paper is a study of our code swarm application, comprising its design, results and public response. We share our design methodology, including why we chose the organic information visualization technique, how we designed for both developers and a casual audience, and what lessons we learned from our experiment. We validate the results produced by code swarm through a qualitative analysis and by gathering online user comments. Furthermore, we successfully released the code as open source, and the software community used it to visualize their own projects and shared their results as well. In the end, we believe code swarm has positive implications for the future of organic information design and open source information visualization practice.},
	language = {en},
	number = {6},
	urldate = {2020-01-16},
	journal = {IEEE Transactions on Visualization and Computer Graphics},
	author = {Ogawa, M. and {Kwan-Liu Ma}},
	month = nov,
	year = {2009},
	pages = {1097--1104},
	file = {Ogawa and Kwan-Liu Ma - 2009 - code_swarm A Design Study in Organic Software Vis.pdf:/Users/axelekwall/Zotero/storage/RJEUU65M/Ogawa and Kwan-Liu Ma - 2009 - code_swarm A Design Study in Organic Software Vis.pdf:application/pdf}
}

@article{voinea_cvsscan_2005,
	title = {{CVSscan}: {Visualization} of {Code} {Evolution}},
	abstract = {During the life cycle of a software system, the source code is changed many times. We study how developers can be enabled to get insight in these changes, in order to understand the status, history and structure better, as well as for instance the roles played by various contributors. We present CVSscan, an integrated multiview environment for this. Central is a lineoriented display of the changing code, where each version is represented by a column, and where the horizontal direction is used for time, Separate linked displays show various metrics, as well as the source code itself. A large variety of options is provided to visualize a number of different aspects. Informal user studies demonstrate the efficiency of this approach for real world use cases.},
	language = {en},
	author = {Voinea, Lucian and Telea, Alex and van Wijk, Jarke J},
	year = {2005},
	pages = {12},
	file = {Voinea et al. - CVSscan Visualization of Code Evolution.pdf:/Users/axelekwall/Zotero/storage/MYCSU6IT/Voinea et al. - CVSscan Visualization of Code Evolution.pdf:application/pdf}
}

@inproceedings{roehm_how_2012,
	address = {Zurich},
	title = {How do professional developers comprehend software?},
	isbn = {978-1-4673-1066-6 978-1-4673-1067-3},
	url = {http://ieeexplore.ieee.org/document/6227188/},
	doi = {10.1109/ICSE.2012.6227188},
	abstract = {Research in program comprehension has considerably evolved over the past two decades. However, only little is known about how developers practice program comprehension under time and project pressure, and which methods and tools proposed by researchers are used in industry. This paper reports on an observational study of 28 professional developers from seven companies, investigating how developers comprehend software. In particular we focus on the strategies followed, information needed, and tools used.},
	language = {en},
	urldate = {2020-01-20},
	booktitle = {2012 34th {International} {Conference} on {Software} {Engineering} ({ICSE})},
	publisher = {IEEE},
	author = {Roehm, Tobias and Tiarks, Rebecca and Koschke, Rainer and Maalej, Walid},
	month = jun,
	year = {2012},
	pages = {255--265},
	file = {Roehm et al. - 2012 - How do professional developers comprehend software.pdf:/Users/axelekwall/Zotero/storage/CWH4D8NK/Roehm et al. - 2012 - How do professional developers comprehend software.pdf:application/pdf}
}

@article{stolterman_concept-driven_2010,
	title = {Concept-{Driven} {Interaction} {Design} {Research}},
	volume = {25},
	issn = {0737-0024, 1532-7051},
	url = {https://www.tandfonline.com/doi/full/10.1080/07370020903586696},
	doi = {10.1080/07370020903586696},
	language = {en},
	number = {2},
	urldate = {2020-01-21},
	journal = {Human–Computer Interaction},
	author = {Stolterman, Erik and Wiberg, Mikael},
	month = may,
	year = {2010},
	pages = {95--118},
	file = {Stolterman and Wiberg - 2010 - Concept-Driven Interaction Design Research.pdf:/Users/axelekwall/Zotero/storage/EJMV7KNL/Stolterman and Wiberg - 2010 - Concept-Driven Interaction Design Research.pdf:application/pdf}
}

@incollection{seaman_measuring_2011,
	title = {Measuring and {Monitoring} {Technical} {Debt}},
	volume = {82},
	isbn = {978-0-12-385512-1},
	url = {https://linkinghub.elsevier.com/retrieve/pii/B9780123855121000025},
	abstract = {Technical debt is a metaphor for immature, incomplete, or inadequate artifacts in the software development lifecycle that cause higher costs and lower quality in the long run. These artifacts remaining in a system affect subsequent development and maintenance activities, and so can be seen as a type of debt that the system developers owe the system. Incurring technical debt may speed up software development in the short run, but such benefit is achieved at the cost of extra work in the future, as if paying interest on the debt. In this sense, the technical debt metaphor characterizes the relationship between the short-term benefits of delaying certain software maintenance tasks or doing them quickly and less carefully, and the long-term cost of those delays. However, managing technical debt is more complicated than managing financial debt because of the uncertainty involved. In this chapter, the authors review the main issues associated with technical debt, and propose a technical debt management framework and a research plan for validation. The objective of our research agenda is to develop and validate a comprehensive technical debt theory that formalizes the relationship between the cost and benefit sides of the concept. Further, we propose to use the theory to propose mechanisms (processes and tools) for measuring and managing technical debt in software product maintenance. The theory and management mechanisms are intended ultimately to contribute to the improved quality of software and facilitate decision making in software maintenance.},
	language = {en},
	urldate = {2020-01-31},
	booktitle = {Advances in {Computers}},
	publisher = {Elsevier},
	author = {Seaman, Carolyn and Guo, Yuepu},
	year = {2011},
	doi = {10.1016/B978-0-12-385512-1.00002-5},
	pages = {25--46},
	file = {Seaman and Guo - 2011 - Measuring and Monitoring Technical Debt.pdf:/Users/axelekwall/Zotero/storage/ANIKQY7F/Seaman and Guo - 2011 - Measuring and Monitoring Technical Debt.pdf:application/pdf}
}

@article{cunningham_wycash_1992,
	title = {The {WyCash} portfolio management system},
	doi = {https://doi.org/10.1145/157709.157715},
	language = {en},
	author = {Cunningham, Ward},
	year = {1992},
	pages = {2},
	file = {Cunningham - The WyCash portfolio management system.pdf:/Users/axelekwall/Zotero/storage/API8G8ZD/Cunningham - The WyCash portfolio management system.pdf:application/pdf}
}

@article{tom_exploration_2013,
	title = {An exploration of technical debt},
	volume = {86},
	issn = {01641212},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0164121213000022},
	doi = {10.1016/j.jss.2012.12.052},
	abstract = {Objective: To make a critical examination of technical debt and consolidate understanding of the nature of technical debt and its implications for software development.
Method: An exploratory case study technique that involves multivocal literature review, supplemented by interviews with software practitioners and academics to establish the boundaries of the technical debt phenomenon.
Result: A key outcome of this research is the creation of a theoretical framework that provides a holistic view of technical debt comprising a set of technical debts dimensions, attributes, precedents and outcomes, as well as the phenomenon itself and a taxonomy that describes and encompasses different forms of the technical debt phenomenon.
Conclusion: The proposed framework provides a useful approach to understanding the overall phenomenon of technical debt for practical purposes. Future research should incorporate empirical studies to validate heuristics and techniques that will assist practitioners in their management of technical debt.},
	language = {en},
	number = {6},
	urldate = {2020-02-11},
	journal = {Journal of Systems and Software},
	author = {Tom, Edith and Aurum, Aybüke and Vidgen, Richard},
	month = jun,
	year = {2013},
	pages = {1498--1516},
	file = {Tom et al. - 2013 - An exploration of technical debt.pdf:/Users/axelekwall/Zotero/storage/PAJZLEEM/Tom et al. - 2013 - An exploration of technical debt.pdf:application/pdf}
}

@inproceedings{seaman_using_2012,
	address = {Zurich, Switzerland},
	title = {Using technical debt data in decision making: {Potential} decision approaches},
	isbn = {978-1-4673-1749-8 978-1-4673-1748-1},
	shorttitle = {Using technical debt data in decision making},
	url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6225999},
	doi = {10.1109/MTD.2012.6225999},
	abstract = {The management of technical debt ultimately requires decision making – about incurring, paying off, or deferring technical debt instances. This position paper discusses several existing approaches to complex decision making, and suggests that exploring their applicability to technical debt decision making would be a worthwhile subject for further research.},
	language = {en},
	urldate = {2020-02-14},
	booktitle = {2012 {Third} {International} {Workshop} on {Managing} {Technical} {Debt} ({MTD})},
	publisher = {IEEE},
	author = {Seaman, Carolyn and Guo, Yuepu and Zazworka, Nico and Shull, Forrest and Izurieta, Clemente and Cai, Yuanfang and Vetro, Antonio},
	month = jun,
	year = {2012},
	pages = {45--48},
	file = {Seaman et al. - 2012 - Using technical debt data in decision making Pote.pdf:/Users/axelekwall/Zotero/storage/CDMUVK38/Seaman et al. - 2012 - Using technical debt data in decision making Pote.pdf:application/pdf}
}

@article{mo_hotspot_2015,
	title = {Hotspot {Patterns}: {The} {Formal} {Definition} and {Automatic} {Detection} of {Architecture} {Smells}},
	abstract = {In this paper, we propose and empirically validate a suite of hotspot patterns: recurring architecture problems that occur in most complex systems and incur high maintenance costs. In particular, we introduce two novel hotspot patterns, Unstable Interface and Implicit Cross-module Dependency. These patterns are deﬁned based on Baldwin and Clark’s design rule theory, and detected by the combination of history and architecture information. Through our tool-supported evaluations, we show that these patterns not only identify the most error-prone and changeprone ﬁles, they also pinpoint speciﬁc architecture problems that may be the root causes of bugginess and change proneness. Signiﬁcantly, we show that 1) these structure-history integrated patterns contribute more to error- and change-proneness than other hotspot patterns, and 2) the more hotspot patterns a ﬁle is involved in, the more error- and change-prone it is. Finally, we report on an industrial case study to demonstrate the practicality of these hotspot patterns. The architect and developers conﬁrmed that our hotspot detector discovered the majority of the architecture problems causing maintenance pain, and they have started to improve the system’s maintainability by refactoring and ﬁxing the identiﬁed architecture issues.},
	language = {en},
	author = {Mo, Ran and Cai, Yuanfang and Kazman, Rick and Xiao, Lu},
	year = {2015},
	pages = {10},
	file = {Mo et al. - Hotspot Patterns The Formal Definition and Automa.pdf:/Users/axelekwall/Zotero/storage/BU786V47/Mo et al. - Hotspot Patterns The Formal Definition and Automa.pdf:application/pdf}
}

@inproceedings{beyer_animated_2006,
	address = {Benevento},
	title = {Animated {Visualization} of {Software} {History} using {Evolution} {Storyboards}},
	isbn = {978-0-7695-2719-2},
	url = {https://ieeexplore.ieee.org/document/4023990/},
	doi = {10.1109/WCRE.2006.14},
	abstract = {The understanding of the structure of a software system can be improved by analyzing the system’s evolution during development. Visualizations of software history that provide only static views do not capture the dynamic nature of software evolution. We present a new visualization technique, the Evolution Storyboard, which provides dynamic views of the evolution of a software’s structure. An evolution storyboard consists of a sequence of animated panels, which highlight the structural changes in the system; one panel for each considered time period. Using storyboards, engineers can spot good design, signs of structural decay, or the spread of cross cutting concerns in the code. We implemented our concepts in a tool, which automatically extracts software dependency graphs from version control repositories and computes storyboards based on panels for different time periods. For applying our approach in practice, we provide a step by step guide that others can follow along the storyboard visualizations, in order to study the evolution of large systems. We have applied our method to several large open source software systems. In this paper, we demonstrate that our method provides additional information (compared to static views) on the ArgoUML project, an open source UML modeling tool.},
	language = {en},
	urldate = {2020-02-19},
	booktitle = {2006 13th {Working} {Conference} on {Reverse} {Engineering}},
	publisher = {IEEE},
	author = {Beyer, Dirk and Hassan, Ahmed E.},
	month = oct,
	year = {2006},
	pages = {199--210},
	file = {Beyer and Hassan - 2006 - Animated Visualization of Software History using E.pdf:/Users/axelekwall/Zotero/storage/HL94V2CT/Beyer and Hassan - 2006 - Animated Visualization of Software History using E.pdf:application/pdf}
}

@incollection{hazzan_agile_2014,
	title = {The {Agile} {Manifesto}},
	isbn = {2191-5768},
	url = {https://dx.doi.org/10.1007/978-3-319-10157-6_3},
	booktitle = {Agile {Anywhere}},
	publisher = {Springer International Publishing},
	author = {Hazzan, Orit and Dubinsky, Yael},
	year = {2014},
	doi = {10.1007/978-3-319-10157-6_3},
	pages = {9--14},
	file = {Hazzan and Dubinsky - 2014 - The Agile Manifesto.pdf:/Users/axelekwall/Zotero/storage/L7584GZ9/Hazzan and Dubinsky - 2014 - The Agile Manifesto.pdf:application/pdf}
}

@inproceedings{ball_if_1997,
	title = {If your version control system could talk},
	volume = {11},
	author = {Ball, Thomas and Kim, Jung-Min and Porter, Adam A and Siy, Harvey P},
	year = {1997},
	file = {Ball et al. - 1997 - If your version control system could talk.pdf:/Users/axelekwall/Zotero/storage/EH39TQ2T/Ball et al. - 1997 - If your version control system could talk.pdf:application/pdf}
}

@book{spence_information_2014,
	address = {New York},
	title = {Information visualization},
	isbn = {978-3-319-07340-8},
	language = {en},
	publisher = {Springer},
	author = {Spence, Robert},
	year = {2014},
	file = {Spence - 2014 - Information visualization.pdf:/Users/axelekwall/Zotero/storage/XIVMC7PP/Spence - 2014 - Information visualization.pdf:application/pdf}
}

@incollection{friendly_brief_2008,
	address = {Berlin, Heidelberg},
	title = {A {Brief} {History} of {Data} {Visualization}},
	isbn = {978-3-540-33037-0},
	url = {https://doi.org/10.1007/978-3-540-33037-0_2},
	abstract = {It is common to think of statistical graphics and data visualization as relatively modern developments in statistics. In fact, the graphic representation of quantitative information has deep roots. These roots reach into the histories of the earliestmap making and visual depiction, and later into thematic cartography, statistics and statistical graphics, medicine and other fields. Along the way, developments in technologies (printing, reproduction), mathematical theory and practice, and empirical observation and recording enabled the wider use of graphics and new advances in form and content.},
	booktitle = {Handbook of {Data} {Visualization}},
	publisher = {Springer Berlin Heidelberg},
	author = {Friendly, Michael},
	editor = {Chen, Chun-houh and Härdle, Wolfgang and Unwin, Antony},
	year = {2008},
	doi = {10.1007/978-3-540-33037-0_2},
	pages = {15--56},
	file = {Friendly - 2008 - A Brief History of Data Visualization.pdf:/Users/axelekwall/Zotero/storage/M9CTT5D6/Friendly - 2008 - A Brief History of Data Visualization.pdf:application/pdf}
}

@article{liu_survey_2014,
	title = {A survey on information visualization: recent advances and challenges},
	volume = {30},
	issn = {0178-2789, 1432-2315},
	shorttitle = {A survey on information visualization},
	url = {http://link.springer.com/10.1007/s00371-013-0892-3},
	doi = {10.1007/s00371-013-0892-3},
	abstract = {Information visualization (InfoVis), the study of transforming data, information, and knowledge into interactive visual representations, is very important to users because it provides mental models of information. The boom in big data analytics has triggered broad use of InfoVis in a variety of domains, ranging from ﬁnance to sports to politics. In this paper, we present a comprehensive survey and key insights into this fast-rising area. The research on InfoVis is organized into a taxonomy that contains four main categories, namely empirical methodologies, user interactions, visualization frameworks, and applications, which are each described in terms of their major goals, fundamental principles, recent trends, and state-of-the-art approaches. At the conclusion of this survey, we identify existing technical challenges and propose directions for future research.},
	language = {en},
	number = {12},
	urldate = {2020-03-06},
	journal = {The Visual Computer},
	author = {Liu, Shixia and Cui, Weiwei and Wu, Yingcai and Liu, Mengchen},
	month = dec,
	year = {2014},
	pages = {1373--1393},
	file = {Liu et al. - 2014 - A survey on information visualization recent adva.pdf:/Users/axelekwall/Zotero/storage/3JNYWV7H/Liu et al. - 2014 - A survey on information visualization recent adva.pdf:application/pdf}
}

@inproceedings{chi_taxonomy_2000,
	address = {Salt Lake City, UT, USA},
	title = {A taxonomy of visualization techniques using the data state reference model},
	isbn = {978-0-7695-0804-7},
	url = {http://ieeexplore.ieee.org/document/885092/},
	doi = {10.1109/INFVIS.2000.885092},
	abstract = {In previous work, researchers have attempted to construct taxonomies of information visualization techniques by examining the data domains that are compatible with these techniques. This is useful because implementers can quickly identify various techniques that can be applied to their domain of interest. However, these taxonomies do not help the implementers understand how to apply and implement these techniques. In this paper, we will extend and then propose a new way to taxonomize information visualization techniques by using the Data State Model [Chi98]. In fact, as the taxonomic analysis in this paper will show, many of the techniques share similar operating steps that can easily be reused. The paper shows that the Data State Model not only helps researchers understand the space of design, but also helps implementers understand how information visualization techniques can be applied more broadly.},
	language = {en},
	urldate = {2020-03-06},
	booktitle = {{IEEE} {Symposium} on {Information} {Visualization} 2000. {INFOVIS} 2000. {Proceedings}},
	publisher = {IEEE Comput. Soc},
	author = {Chi, E.H.},
	year = {2000},
	pages = {69--75},
	file = {Chi - 2000 - A taxonomy of visualization techniques using the d.pdf:/Users/axelekwall/Zotero/storage/8YBBHIEF/Chi - 2000 - A taxonomy of visualization techniques using the d.pdf:application/pdf}
}

@article{card_information_2009,
	title = {Information visualization},
	volume = {181},
	journal = {Human-computer interaction: Design issues, solutions, and applications},
	author = {Card, Stuart and Mackinlay, JD and Shneiderman, B},
	year = {2009},
	note = {Publisher: Taylor \& Francis},
	file = {Card et al. - 2009 - Information visualization.pdf:/Users/axelekwall/Zotero/storage/I3UXTU6D/Card et al. - 2009 - Information visualization.pdf:application/pdf}
}

@book{card_readings_1999,
	address = {San Francisco},
	title = {Readings in information visualization : using vision to think},
	publisher = {San Francisco : Kaufmann},
	author = {Card, Stuart K},
	editor = {Mackinlay, Jock D and Shneiderman, Ben},
	year = {1999},
	keywords = {Bildbehandling (Datorer), Bildbehandling (Datorteknik), Computer graphics, Databehandling, Datorgrafi, Document visualization, Image processing (Computer engineering), Visualiseringsteknik}
}

@inproceedings{card_structure_1997,
	address = {Phoenix, AZ, USA},
	title = {The structure of the information visualization design space},
	isbn = {978-0-8186-8189-9},
	url = {http://ieeexplore.ieee.org/document/636792/},
	doi = {10.1109/INFVIS.1997.636792},
	abstract = {Research on information visualization has reached the place where a number of successful point designs have been proposed and a number of techniques of been discovered. It is now appropriate to begin to describe and analyze portions of the design space so as to understand the differences among designs and to suggest new possibilities. This paper proposes an organization of the information visualization literature and illustrates it with a series of examples. The result is a framework for designing new visualizations and augmenting existing designs.},
	language = {en},
	urldate = {2020-03-06},
	booktitle = {Proceedings of {VIZ} '97: {Visualization} {Conference}, {Information} {Visualization} {Symposium} and {Parallel} {Rendering} {Symposium}},
	publisher = {IEEE Comput. Soc},
	author = {Card, S.K. and Mackinlay, J.},
	year = {1997},
	pages = {92--99,},
	file = {Card and Mackinlay - 1997 - The structure of the information visualization des.pdf:/Users/axelekwall/Zotero/storage/94773XZ4/Card and Mackinlay - 1997 - The structure of the information visualization des.pdf:application/pdf}
}

@article{rasku_investigation_2019,
	title = {An {Investigation} of {Integration} {Debt} in {Continuous} {Integration}},
	language = {en},
	author = {Rasku, Kevin and Balavi, Pooriya},
	year = {2019},
	pages = {122},
	file = {Rasku and Balavi - An Investigation of Integration Debt in Continuous.pdf:/Users/axelekwall/Zotero/storage/X8IN525H/Rasku and Balavi - An Investigation of Integration Debt in Continuous.pdf:application/pdf}
}

@book{shull_guide_2008,
	address = {London},
	title = {Guide to advanced empirical software engineering},
	isbn = {978-1-84800-043-8},
	language = {en},
	publisher = {Springer},
	editor = {Shull, Forrest and Singer, Janice and Sjøberg, Dag I. K.},
	year = {2008},
	note = {OCLC: ocn173720742},
	keywords = {Software engineering},
	file = {Shull et al. - 2008 - Guide to advanced empirical software engineering.pdf:/Users/axelekwall/Zotero/storage/5RTK92PS/Shull et al. - 2008 - Guide to advanced empirical software engineering.pdf:application/pdf}
}

@article{braun_using_2006,
	title = {Using thematic analysis in psychology},
	volume = {3},
	issn = {1478-0887, 1478-0895},
	url = {http://www.tandfonline.com/doi/abs/10.1191/1478088706qp063oa},
	doi = {10.1191/1478088706qp063oa},
	language = {en},
	number = {2},
	urldate = {2020-05-28},
	journal = {Qualitative Research in Psychology},
	author = {Braun, Virginia and Clarke, Victoria},
	month = jan,
	year = {2006},
	pages = {77--101},
	file = {Braun and Clarke - 2006 - Using thematic analysis in psychology.pdf:/Users/axelekwall/Zotero/storage/3JHB5ZB4/Braun and Clarke - 2006 - Using thematic analysis in psychology.pdf:application/pdf}
}

@incollection{wilson_questionnaires_2013,
	title = {Questionnaires and {Surveys}},
	isbn = {978-0-12-410392-4},
	url = {https://linkinghub.elsevier.com/retrieve/pii/B9780124103924000027},
	language = {en},
	urldate = {2020-06-03},
	booktitle = {Credible {Checklists} and {Quality} {Questionnaires}},
	publisher = {Elsevier},
	author = {Wilson, Chauncey},
	year = {2013},
	doi = {10.1016/B978-0-12-410392-4.00002-7},
	pages = {29--79},
	file = {Wilson - 2013 - Questionnaires and Surveys.pdf:/Users/axelekwall/Zotero/storage/N29847LG/Wilson - 2013 - Questionnaires and Surveys.pdf:application/pdf}
}

@article{herman_tree_1998,
	title = {Tree {Visualisation} and {Navigation} {Clues} for {Information} {Visualisation}},
	volume = {17},
	issn = {0167-7055, 1467-8659},
	url = {http://doi.wiley.com/10.1111/1467-8659.00235},
	doi = {10.1111/1467-8659.00235},
	abstract = {Information visualisation often requires good navigation aids on large trees, which represent the underlying abstract information. Using trees for information visualisation requires novel user interface techniques, visual clues, and navigational aids. This paper describes a visual clue: using the so-called Strahler numbers, a map is provided that indicates which parts of the tree are interesting. A second idea is that of “folding” away subtrees that are too “diﬀerent” in some sense, thereby reducing the visual complexity of the tree. Examples are given demonstrating these techniques, and what the further challenges in this area are.},
	language = {en},
	number = {2},
	urldate = {2020-06-03},
	journal = {Computer Graphics Forum},
	author = {Herman, Ivan and Delest, Maylis and Melancon, Guy},
	month = jun,
	year = {1998},
	pages = {153--165},
	file = {Herman et al. - 1998 - Tree Visualisation and Navigation Clues for Inform.pdf:/Users/axelekwall/Zotero/storage/5EMYIEP6/Herman et al. - 1998 - Tree Visualisation and Navigation Clues for Inform.pdf:application/pdf}
}

@inproceedings{bacher_using_2016,
	address = {Raleigh, NC, USA},
	title = {On {Using} {Tree} {Visualisation} {Techniques} to {Support} {Source} {Code} {Comprehension}},
	isbn = {978-1-5090-3850-3},
	url = {http://ieeexplore.ieee.org/document/7780163/},
	doi = {10.1109/VISSOFT.2016.8},
	abstract = {This paper presents a design study that investigates the use of compact tree visualisations to provide software developers with an overview of the static structure of a source code document within a code editor in order to facilitate source code understanding and navigation. A prototype is presented which utilises an icicle tree visualisation to encode the control structure hierarchy of a source code document, as well as a circular treemap visualisation to encode the scope hierarchy of a source code document. An overview of the prototype and its functionality is given as well as a detailed discussion on the design rationale behind the tool. Possible applications and future work plans are also discussed.},
	language = {en},
	urldate = {2020-06-03},
	booktitle = {2016 {IEEE} {Working} {Conference} on {Software} {Visualization} ({VISSOFT})},
	publisher = {IEEE},
	author = {Bacher, Ivan and Namee, Brian Mac and Kelleher, John D.},
	month = oct,
	year = {2016},
	pages = {91--95},
	file = {Bacher et al. - 2016 - On Using Tree Visualisation Techniques to Support .pdf:/Users/axelekwall/Zotero/storage/5JZGUEIK/Bacher et al. - 2016 - On Using Tree Visualisation Techniques to Support .pdf:application/pdf}
}

@article{graham_survey_2010,
	title = {A {Survey} of {Multiple} {Tree} {Visualisation}},
	volume = {9},
	issn = {1473-8716, 1473-8724},
	url = {http://journals.sagepub.com/doi/10.1057/ivs.2009.29},
	doi = {10.1057/ivs.2009.29},
	abstract = {This article summarises the current state of research into multiple tree visualisations. It discusses the spectrum of current representation techniques used on single trees, pairs of trees and finally multiple trees, in order to identify which representations are best suited to particular tasks and to find gaps in the representation space, in which opportunities for future multiple tree visualisation research may exist. The application areas from where multiple tree data are derived are enumerated, and the distinct structures that multiple trees make in combination with each other and the effect on subsequent approaches to their visualisation are discussed, along with the basic high-level goals of existing multiple tree visualisations.},
	language = {en},
	number = {4},
	urldate = {2020-06-03},
	journal = {Information Visualization},
	author = {Graham, Martin and Kennedy, Jessie},
	month = dec,
	year = {2010},
	pages = {235--252},
	file = {Graham and Kennedy - 2010 - A Survey of Multiple Tree Visualisation.pdf:/Users/axelekwall/Zotero/storage/VV86F2HA/Graham and Kennedy - 2010 - A Survey of Multiple Tree Visualisation.pdf:application/pdf}
}

@article{schulz_design_2011,
	title = {The {Design} {Space} of {Implicit} {Hierarchy} {Visualization}: {A} {Survey}},
	volume = {17},
	issn = {1077-2626},
	shorttitle = {The {Design} {Space} of {Implicit} {Hierarchy} {Visualization}},
	url = {http://ieeexplore.ieee.org/document/5473227/},
	doi = {10.1109/TVCG.2010.79},
	abstract = {Apart from explicit node-link representations, implicit visualizations and especially the Treemap as their frontrunner have acquired a solid position among the available techniques to visualize hierarchies. Their advantage is a highly space-efficient graphical representation that does not require explicit drawing of edges. In this paper, we survey the design space for this class of visualization techniques. We establish the design space along the four axes of dimensionality, edge representation, node representation, and layout by examining existing implicit hierarchy visualization techniques. The survey is completed by casting some light into regions of the design space that have not yet been explored. Our design space is not a mere theoretical construct, but a practically usable tool for rapid visualization development. To that end, we discuss a software implementation of the introduced design space.},
	language = {en},
	number = {4},
	urldate = {2020-06-03},
	journal = {IEEE Transactions on Visualization and Computer Graphics},
	author = {Schulz, H-J and Hadlak, S and Schumann, H},
	month = apr,
	year = {2011},
	pages = {393--411},
	file = {Schulz et al. - 2011 - The Design Space of Implicit Hierarchy Visualizati.pdf:/Users/axelekwall/Zotero/storage/3SUY7FC6/Schulz et al. - 2011 - The Design Space of Implicit Hierarchy Visualizati.pdf:application/pdf}
}
